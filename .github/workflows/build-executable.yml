name: Build Executable

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: List directory contents for debugging
      run: |
        echo "Root directory:"
        dir
        echo "====================="
        echo "Screen directory:"
        dir screen
        echo "====================="
        echo "List all Python files:"
        Get-ChildItem -Path . -Filter "*.py" -Recurse | Select-Object FullName
        echo "====================="
        echo "Recursive listing of all directories:"
        Get-ChildItem -Path . -Directory -Recurse | Select-Object FullName

    - name: Build executable
      run: |
        # Create a default config.json if it doesn't exist
        if (-not (Test-Path -Path "config.json")) {
          echo "{}" > config.json
        }
        
        # Use the spec file instead of direct command
        pyinstaller EDAPGui.spec
        
        # Copy README-VIRUS-WARNING.md to the dist folder
        if (Test-Path -Path "README-VIRUS-WARNING.md") {
          Copy-Item -Path "README-VIRUS-WARNING.md" -Destination "dist\README-VIRUS-WARNING.md"
        }
    
    # For GitHub Actions demo only - in production use a proper certificate from a CA
    - name: Create and use self-signed certificate (for testing)
      if: github.event_name == 'workflow_dispatch'  # Only run on manual trigger
      run: |
        # Install Windows SDK for signing tools
        choco install windows-sdk-10-version-2004-all -y
        
        # Create a self-signed certificate (for testing only)
        $cert = New-SelfSignedCertificate -Subject "CN=EDAPGui Developer" -Type CodeSigning -CertStoreLocation Cert:\CurrentUser\My
        
        # Export certificate to pfx file with password
        $password = ConvertTo-SecureString -String "test123" -Force -AsPlainText
        Export-PfxCertificate -Cert $cert -FilePath certificate.pfx -Password $password
        
        # Define path to signtool from Windows SDK
        $signtool = "C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64\signtool.exe"
        if (-not (Test-Path $signtool)) {
          Write-Host "Searching for signtool..."
          $signtool = Get-ChildItem -Path "C:\Program Files (x86)\Windows Kits\10\bin" -Recurse -Filter "signtool.exe" | Select-Object -First 1 -ExpandProperty FullName
          Write-Host "Found signtool at: $signtool"
        }
        
        # Sign the executable with timestamp
        & $signtool sign /f certificate.pfx /p test123 /tr http://timestamp.digicert.com /td sha256 /fd sha256 /d "EDAP GUI Application" .\dist\EDAPGui.exe
        
        # Note: This self-signed certificate is for demonstration only and won't eliminate Windows Defender warnings
        # In production, use a certificate from a trusted certificate authority

    - name: Create ZIP package with documentation
      run: |
        # Create a ZIP file that includes the executable and documentation
        Compress-Archive -Path .\dist\* -DestinationPath EDAPGui-Package.zip
        
        # Move ZIP to dist directory
        Move-Item -Path EDAPGui-Package.zip -Destination .\dist\EDAPGui-Package.zip

    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: EDAPGui-executable
        path: ./dist/EDAPGui.exe
        retention-days: 90
        
    - name: Upload complete package
      uses: actions/upload-artifact@v4
      with:
        name: EDAPGui-package
        path: ./dist/EDAPGui-Package.zip
        retention-days: 90
name: Build Executable

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: List directory contents for debugging
      run: |
        echo "Root directory:"
        dir
        echo "====================="
        echo "Screen directory:"
        dir screen
        echo "====================="
        echo "List all Python files:"
        Get-ChildItem -Path . -Filter "*.py" -Recurse | Select-Object FullName
        echo "====================="
        echo "Recursive listing of all directories:"
        Get-ChildItem -Path . -Directory -Recurse | Select-Object FullName

    - name: Build executable
      run: |
        # Create a default config.json if it doesn't exist
        if (-not (Test-Path -Path "config.json")) {
          echo "{}" > config.json
        }
        
        # Use the spec file instead of direct command
        pyinstaller EDAPGui.spec
    
    # For GitHub Actions demo only - in production use a proper certificate from a CA
    - name: Create and use self-signed certificate (for testing)
      if: github.event_name == 'workflow_dispatch'  # Only run on manual trigger
      run: |
        # Create a self-signed certificate (for testing only)
        $cert = New-SelfSignedCertificate -Subject "CN=EDAPGui Developer" -Type CodeSigning -CertStoreLocation Cert:\CurrentUser\My
        
        # Export certificate to pfx file with password
        $password = ConvertTo-SecureString -String "test123" -Force -AsPlainText
        Export-PfxCertificate -Cert $cert -FilePath certificate.pfx -Password $password
        
        # Sign the executable
        # Install signtool from Windows SDK
        Invoke-WebRequest -Uri "https://aka.ms/signtool64" -OutFile "signtool.exe"
        
        # Sign the executable (requires Windows SDK or SignTool)
        .\signtool.exe sign /f certificate.pfx /p test123 /t http://timestamp.digicert.com /d "EDAP GUI Application" /du "https://github.com/yourusername/yourrepo" .\dist\EDAPGui.exe
        
        # Note: This self-signed certificate is for demonstration only and won't eliminate Windows Defender warnings
        # In production, use a certificate from a trusted certificate authority

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: EDAPGui-executable
        path: ./dist/EDAPGui.exe
        retention-days: 90
name: Build Executable

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: List directory contents for debugging
      run: |
        echo "Root directory:"
        dir
        echo "====================="
        echo "Screen directory:"
        dir screen
        echo "====================="
        echo "List all Python files:"
        Get-ChildItem -Path . -Filter "*.py" -Recurse | Select-Object FullName
        echo "====================="
        echo "Recursive listing of all directories:"
        Get-ChildItem -Path . -Directory -Recurse | Select-Object FullName

    - name: Build executable
      run: |
        # Create a default config.json if it doesn't exist
        if (-not (Test-Path -Path "config.json")) {
          echo "{}" > config.json
        }
        
        # Create version file for the build
        $version = Get-Content -Path version.txt -Raw
        $buildDate = Get-Date -Format "yyyy-MM-dd"
        echo "Build date: $buildDate`nVersion: $version" > build_info.txt
        
        # Use UPX to compress the executable (reduces false positives)
        pip install upx-packer
        
        # Run PyInstaller with options to reduce false positives
        pyinstaller --onefile --windowed --icon="screen\edap.ico" `
          --add-data "screen\edap.ico;screen" `
          --add-data "screen\*.png;screen" `
          --add-data "*.py;." `
          --add-data "build_info.txt;." `
          --add-data "config.json;." `
          --collect-data "paddle" `
          --collect-all "paddleocr" `
          --hidden-import=PIL `
          --hidden-import=PIL._imagingtk `
          --hidden-import=PIL._tkinter_finder `
          --name "EDAP-Autopilot" `
          --clean `
          EDAPGui.py
          
        # Rename the file to include version
        $exePath = ".\dist\EDAP-Autopilot.exe"
        if (Test-Path $exePath) {
          $versionNumber = ($version -split "`n")[0].Trim()
          $newName = ".\dist\EDAP-Autopilot-$versionNumber.exe"
          Rename-Item -Path $exePath -NewName $newName
          echo "Created: $newName"
        }

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: EDAP-Autopilot
        path: ./dist/EDAP-Autopilot-*.exe
        retention-days: 90